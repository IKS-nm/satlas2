# Simple workflow for deploying static content to GitHub Pages
name: Build documentation, prepare distribution, upload to Pages, upload to PyPI

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    tags:
      - '^[0-9]+.[0-9]+.[0-9]+$'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          fetch-depth: '0'
      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
           python-version: '3.9'
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
      - name: Install most dependencies
        run: |
          pip install sphinx sphinx_book_theme setuptools setuptools_scm[toml] numpy matplotlib scipy h5py emcee sympy lmfit numdifftools uncertainties tqdm pandas flit build
      - name: Install sphinx-toolbox
        run: |
          pip install sphinx-toolbox --user
      - name: Get SCM version
        run: |
          python -m setuptools_scm
      - name: Sphinx build the docs
        run: |
          sphinx-build docs _build
      - name: Run build
        run: |
          python -m build
      # The following steps have a check to see if the commit has a tag. Try the upload to pypi first to see if it fails or not, then upload the documentation.
      - name: Publish distribution to PyPI if it has a tag
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '_build/.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
